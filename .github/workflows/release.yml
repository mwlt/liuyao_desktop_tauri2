name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: write
  pull-requests: write

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS Intel 专用版本
          - platform: macos-13  # Intel 运行器
            os: macos
            arch: x86_64
            rust-target: x86_64-apple-darwin
            name-suffix: "_intel"
          
          # macOS Apple Silicon 专用版本
          - platform: macos-latest  # Apple Silicon 运行器
            os: macos
            arch: aarch64
            rust-target: aarch64-apple-darwin
            name-suffix: "_apple_silicon"
          
          # macOS 通用版本 (Universal Binary)
          - platform: macos-latest
            os: macos
            arch: universal
            rust-target: "universal"
            name-suffix: "_universal"
          
          # Linux 版本
          - platform: ubuntu-22.04
            os: linux
            arch: x86_64
            rust-target: x86_64-unknown-linux-gnu
            name-suffix: ""
          
          # Windows 版本
          - platform: windows-latest
            os: windows
            arch: x86_64
            rust-target: x86_64-pc-windows-msvc
            name-suffix: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: |
            aarch64-apple-darwin
            x86_64-apple-darwin
            x86_64-unknown-linux-gnu
            i686-unknown-linux-gnu
            aarch64-unknown-linux-gnu
            armv7-unknown-linux-gnueabihf
            x86_64-pc-windows-msvc
            i686-pc-windows-msvc
            aarch64-pc-windows-msvc

      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'linux'
        run: |
          sudo apt-get update
          # 安装完整的构建依赖
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            libasound2-dev \
            libssl-dev \
            libdbus-1-dev \
            libfreetype6-dev \
            libexpat1-dev \
            libxcb-composite0-dev \
            libxrandr-dev \
            libxss-dev \
            libxtst-dev \
            libxcb1-dev

      - name: Install frontend dependencies
        run: pnpm install

      - name: Setup macOS Universal Binary (macOS Universal only)
        if: matrix.arch == 'universal'
        run: |
          echo "ENABLE_UNIVERSAL_BINARY=true" >> $GITHUB_ENV
          echo "TAURI_UNIVERSAL_BINARY=true" >> $GITHUB_ENV

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          # 禁用 macOS 代码签名（适用于开源项目）
          # 如需启用代码签名，请在 GitHub Secrets 中配置相应证书
          ENABLE_CODE_SIGNING: false
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'liuyao_desktop_${{ github.ref_name }}'
          releaseBody: |
            ## 🎉 六爻排盘与研究 ${{ github.ref_name }} 发布

            ### 📦 支持平台
            - **Windows**: MSI 安装包、NSIS 安装程序、便携版
            - **macOS**: Intel 专用版、Apple Silicon 专用版、通用版本 (DMG格式)
            - **Linux**: DEB包、RPM包、AppImage 便携版

            ### 📋 更新内容
            请查看 [CHANGELOG.md](https://github.com/mwlt/liuyao_desktop_tauri2/blob/main/CHANGELOG.md) 了解详细更新内容。

            ### 🔽 下载说明
            - **Windows 用户**: 
              - 安装版：下载 `.msi` 或 `.exe` 文件
              - 便携版：下载 `.zip` 文件
            - **macOS 用户**: 
              - Intel Mac: 下载包含 `intel` 的 `.dmg` 文件
              - Apple Silicon Mac: 下载包含 `apple_silicon` 的 `.dmg` 文件  
              - 通用版本: 下载包含 `universal` 的 `.dmg` 文件（推荐）
            - **Linux 用户**: 
              - Ubuntu/Debian: 下载 `.deb` 文件
              - RHEL/CentOS/Fedora: 下载 `.rpm` 文件
              - 其他发行版: 下载 `.AppImage` 文件

          releaseDraft: true
          prerelease: false
          includeUpdaterJson: false
          includeRelease: true
          includeDebug: false

      - name: Build Windows Portable Version
        if: matrix.os == 'windows'
        shell: pwsh
        run: |
          cd src-tauri
          .\scripts\build-portable.ps1

      - name: Upload all artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ matrix.os == 'linux' && 'src-tauri/target/release/bundle/deb/*.deb' || '' }}
            ${{ matrix.os == 'linux' && 'src-tauri/target/release/bundle/rpm/*.rpm' || '' }}
            ${{ matrix.os == 'linux' && 'src-tauri/target/release/bundle/appimage/*.AppImage' || '' }}
            ${{ matrix.os == 'windows' && 'src-tauri/target/release/bundle/msi/*.msi' || '' }}
            ${{ matrix.os == 'windows' && 'src-tauri/target/release/bundle/nsis/*.exe' || '' }}
            ${{ matrix.os == 'windows' && 'src-tauri/target/release/bundle/portable/*.zip' || '' }}
            ${{ matrix.os == 'macos' && format('src-tauri/target/release/bundle/dmg/*{0}.dmg', matrix.name-suffix) || '' }}
            ${{ matrix.os == 'macos' && format('src-tauri/target/release/bundle/macos/*{0}.app.tar.gz', matrix.name-suffix) || '' }}
          tag_name: ${{ github.ref_name }}_${{ matrix.os }}_${{ matrix.arch }}
          name: liuyao_desktop_${{ github.ref_name }}_${{ matrix.os }}_${{ matrix.arch }}
          draft: true
          prerelease: false
          make_latest: true
          generate_release_notes: true
          append_body: true
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload build logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            src-tauri/target/release/build.log
            ~/.cargo/registry/cache/
          retention-days: 7